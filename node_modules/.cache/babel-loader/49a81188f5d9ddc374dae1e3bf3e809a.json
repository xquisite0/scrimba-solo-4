{"ast":null,"code":"var _jsxFileName = \"/Users/zhouyuhang/projects/scrimba-4/src/components/Question.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  // utilize controlled components for answers\n  const optionElements = props.options.map(option => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"question--option\",\n      children: option\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"question--question\",\n      children: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question--options\",\n      children: optionElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/zhouyuhang/projects/scrimba-4/src/components/Question.js"],"names":["React","Question","props","optionElements","options","map","option","question"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEpC;AACA,QAAMC,cAAc,GAAGD,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IAAI;AAC/C,wBACI;AAAQ,MAAA,SAAS,EAAE,kBAAnB;AAAA,gBAAwCA;AAAxC;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJsB,CAAvB;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA,gBAAoCJ,KAAK,CAACK;AAA1C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACKJ;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;KAhBuBF,Q","sourcesContent":["import React from \"react\"\n\nexport default function Question(props) {\n\n    // utilize controlled components for answers\n    const optionElements = props.options.map(option => {\n        return (\n            <button className={\"question--option\"}>{option}</button>\n        )\n    })\n    return (\n        <div className=\"question\">\n            <h4 className=\"question--question\">{props.question}</h4>\n            <div className=\"question--options\">\n                {optionElements}\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}