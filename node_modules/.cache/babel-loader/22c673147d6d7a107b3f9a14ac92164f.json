{"ast":null,"code":"var _jsxFileName = \"/Users/zhouyuhang/projects/scrimba-4/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Question from \"./components/Question\";\nimport Start from \"./components/Start\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [started, setStarted] = React.useState(false);\n  const [questions, setQuestions] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\").then(res => res.json()).then(data => setQuestions(data.results));\n  }, []); // data.results => category, correct_answer, difficulty, \n  // incorrect_answers, question, type\n\n  console.log(questions); // convert questions into question elements to render\n\n  const questionElements = questions.map(questionObj => {\n    // generate random index 0-3 to insert correct answers\n    // into incorrect answers array\n    let randomIndex = Math.floor(Math.random() * 4);\n    let questionAnswers = questionObj.incorrect_answers.slice();\n    questionAnswers.splice(randomIndex, 0, questionObj.correct_answer);\n    console.log(questionAnswers); // render <Question /> with question and answers\n  });\n  return started ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questionElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Start, {\n    toggleStart: () => setStarted(true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"rvbGjxPSMoM0R9qcr1eF65T4S7Q=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/zhouyuhang/projects/scrimba-4/src/App.js"],"names":["React","Question","Start","App","started","setStarted","useState","questions","setQuestions","useEffect","fetch","then","res","json","data","results","console","log","questionElements","map","questionObj","randomIndex","Math","floor","random","questionAnswers","incorrect_answers","slice","splice","correct_answer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,cAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,KAAK,CAACM,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;AAEAN,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AAClBC,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIN,YAAY,CAACM,IAAI,CAACC,OAAN,CAF9B;AAIH,GALD,EAKG,EALH,EAL0B,CAY1B;AACA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ,EAd0B,CAgB1B;;AACA,QAAMW,gBAAgB,GAAGX,SAAS,CAACY,GAAV,CAAcC,WAAW,IAAI;AAClD;AACA;AACA,QAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAlB;AACA,QAAIC,eAAe,GAAGL,WAAW,CAACM,iBAAZ,CAA8BC,KAA9B,EAAtB;AACAF,IAAAA,eAAe,CAACG,MAAhB,CAAuBP,WAAvB,EAAoC,CAApC,EAAuCD,WAAW,CAACS,cAAnD;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYQ,eAAZ,EANkD,CAOlD;AACH,GARwB,CAAzB;AAUA,SACIrB,OAAO,gBACH;AAAA,cACKc;AADL;AAAA;AAAA;AAAA;AAAA,UADG,gBAKH,QAAC,KAAD;AAAO,IAAA,WAAW,EAAE,MAAMb,UAAU,CAAC,IAAD;AAApC;AAAA;AAAA;AAAA;AAAA,UANR;AASH;;GApCuBF,G;;KAAAA,G","sourcesContent":["import React from \"react\"\nimport Question from \"./components/Question\"\nimport Start from \"./components/Start\"\nimport \"./styles.css\"\n\nexport default function App() {\n\n    const [started, setStarted] = React.useState(false)\n    const [questions, setQuestions] = React.useState([])\n\n    React.useEffect(() => {\n        fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\")\n            .then(res => res.json())\n            .then(data => setQuestions(data.results))\n\n    }, [])\n\n    // data.results => category, correct_answer, difficulty, \n    // incorrect_answers, question, type\n    console.log(questions)\n\n    // convert questions into question elements to render\n    const questionElements = questions.map(questionObj => {\n        // generate random index 0-3 to insert correct answers\n        // into incorrect answers array\n        let randomIndex = Math.floor(Math.random() * 4)\n        let questionAnswers = questionObj.incorrect_answers.slice()\n        questionAnswers.splice(randomIndex, 0, questionObj.correct_answer)\n        console.log(questionAnswers)\n        // render <Question /> with question and answers\n    })\n\n    return (\n        started ?\n            <div>\n                {questionElements}\n            </div>\n            :\n            <Start toggleStart={() => setStarted(true)} />\n\n    )\n}"]},"metadata":{},"sourceType":"module"}